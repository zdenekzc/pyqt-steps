import os
import sipconfig

from PyQt5 import QtCore # Fedora: ModuleNotFoundError: No module named 'sip'
sip_inc_fedora = "/usr/share/python3-sip/PyQt5"
sip_inc_debian = "/usr/share/sip/PyQt5"
sip_inc_archlinux = "/usr/lib/python3.9/site-packages/PyQt5/bindings"

basename = "compiler"

# The name of the SIP build file generated by SIP and used by the build system.
build_file = basename + ".sbf"

# Get the SIP configuration information.
config = sipconfig.Configuration()

# Run SIP to generate the code.
os.system(" ".join([config.sip_bin, "-c", ".", "-b", build_file,
                    "-I" + sip_inc_fedora,
                    "-I" + sip_inc_debian,
                    "-I" + sip_inc_archlinux,
                    QtCore.PYQT_CONFIGURATION["sip_flags"], # Fedora
                    basename + ".sip"]))

# Create the Makefile.
makefile = sipconfig.SIPModuleMakefile(config, build_file)

config = "llvm-config"
# config = "llvm-config-6.0"
# config = "llvm-config-8"
# config = "llvm-config-9"

cflags = os.popen (config + " --cflags").read().split ()
ldflags = os.popen (config + " --ldflags").read().split ()
libs = os.popen (config + " --libs").read().split ()

def removeprefix (s, pref) :
    if s.startswith (pref) :
       s = s [ len(pref) : ]
    return s

cflags = cflags + [ "-w", "-g" ]

libs = [ removeprefix (item, "-l") for item in libs ]

libs = libs + [ "clang" ]

# clang 10, 11
libs = libs + [ "clang-cpp" ]

# clang 7, 8, 9
# see <clang-source>/examples/clang-interpreter/Makefile
ldflags = ldflags + [ "-L " + item for item in os.popen (config + " --libdir").read().split() ]
# libs = libs + [ "clangBasic", "clangCodeGen", "clangDriver", "clangFrontend", "clangSerialization", "clangAST" ]

if 0 :
   libs = libs + [
                "clangFrontend",
                # "clangTooling",
                "clangSerialization",
                "clangDriver",
                "clangCodeGen",
                "clangParse", # clangParse before clangSema
                "clangSema",
                # "clangStaticAnalyzerFrontend",
                # "clangStaticAnalyzerCheckers",
                # "clangStaticAnalyzerCore",
                "clangAnalysis",
                "clangIndex",
                # "clangRewriteCore",
                # "clangRewriteFrontend",
                "clangAST",
                "clangEdit", # clangEdit before clangLex
                "clangLex",
                "clangBasic",

                "clangFrontend", # again !? (Debian 10, clang 8.0 from backports)
              ]
# from sim1139/ext/llvm-execute

# for f in /usr/lib/llvm-7/lib/libclang*.a ; do nm $f > `basename $f`.txt ; done

qt_cflags = os.popen ("pkg-config Qt5Core Qt5Gui Qt5Widgets --cflags").read().split ()
qt_ldflags = os.popen ("pkg-config Qt5Core Qt5Gui Qt5Widgets --libs").read().split ()

makefile.extra_cxxflags = cflags + qt_cflags
makefile.extra_lflags = ldflags + qt_ldflags
makefile.extra_libs = libs

# print ("CONFIGURE", cflags + qt_cflags + ldflags + qt_ldflags + libs)

# Generate the Makefile itself.
makefile.generate()
